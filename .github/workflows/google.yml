name: CI/CD Workflows

on:
  push:
    branches: [main]
       
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log into DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          

      # Build the Docker images
      - name: Build Docker image
        run: |
               docker build -t venky2821/my-backend:latest -f Dockerfile.backend .
               docker build -t venky2821/my-frontend:latest -f Dockerfile.frontend .
               docker build -t venky2821/prometheus:latest -f Dockerfile.prometheus .
               docker build -t venky2821/grafana:latest -f Dockerfile.grafana .
               
          
      # Push the Docker image to Docker Hub (or AWS ECR)
      - name: Push Docker images
        run: |
          docker push venky2821/my-backend:latest
          docker push venky2821/my-frontend:latest
          docker push venky2821/prometheus:latest
          docker push venky2821/grafana:latest
      # Deploy the image (optional step, depends on the platform)
      # Example for deploying to AWS ECS, replace with your platform-specific steps
     # - name: Deploy to AWS ECS
      #  run: |
          # Example ECS deployment script
        #  aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
